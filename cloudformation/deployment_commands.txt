#
# Commands to deploy via AWS CloudFormation
#


#
# Inject the state machine JSON file into the cloudformation template
#
# Ideally AWS will allow a Cloudformation template to reference an external 
# state machine the same way it can reference external lambdas.  But until 
# then we're using this python script.
#
python3 cloudformation/inject_state_machine_cfn.py -s state_machine/state_machine.json -c cloudformation/deployment_template.yaml -o cloudformation/deployment_template.provisional.yaml

#
# Upload the local assets that the template references up to a bucket, and
# generate a new template file whose Lambda CodeUri values point to the actual
# S3 locations of the lambda source code
#
aws cloudformation package --template-file cloudformation/deployment_template.provisional.yaml --output-template-file cloudformation/deployment_template.final.yaml --s3-bucket cloudformationdeploysource

#
# Deploy the stack
#
# Take the twice-processed template and use it to deploy the stack
#
aws cloudformation deploy --template-file cloudformation/deployment_template.final.yaml --stack-name TacocatGallery --capabilities CAPABILITY_IAM

#
# Delete the stack
# 
# Deletes regardless of whether it's deployed, failed to deploy, or any other state
#
aws cloudformation delete-stack --stack-name TacocatGallery